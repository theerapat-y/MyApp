---
# indicator is the field that is used to test for form submission
indicator: submit
# Start listing the form elements
elements:
    # The first element will be a text field for the title
    - type: Text
      name: title
      label: Title
      # This is an optional 'mouse over' title pop-up
      attributes:
        title: Enter a book title here
      # Add constraints for the field
      constraints:
        # Force the length to be between 5 and 40 chars
        - type: Length
          min: 5
          max: 40
          # Override the default of 'Invalid input'
          message: Length must be between 5 and 40 characters
 
    # Another text field for the numeric rating
    - type: Select
      name: rating
      label: Rating
      options:
        - ['1', '1 (lowest)']
        - ['2', '2']
        - ['3', '3']
        - ['4', '4']
        - ['5', '5 (highest)']
      attributes:
        title: choose a rating between 1 and 5
      # Use Filter to clean up the input data
      # Could use 'NonNumeric' below, but since Filters apply *before*
      # constraints, it would conflict with the 'Integer' constraint below.
      # So let's skip this and just use the constraint.
      #filter:
        # Remove everything except digits
        #- NonNumeric
      # Add constraints to the field
      constraints:
        # Make sure it's a number
        - type: Integer
 
    # Add a select list for the author selection.  Note that we will
    # dynamically fill in all the authors from the controller but we
    # could manually set items in the select by adding this YAML code:
    # options:
    #   - [ '1', 'Bastien' ]
    #   - [ '2', 'Nasseh'  ]
    - type: Select
      name: authors
      label: Author
      # Convert the drop-down to a multi-select list
      multiple: 1
      # Display 3 entries (user can scroll to see others)
      size: 5
      # One could argue we don't need to do filters or constraints for
      # a select list, but it's smart to do validation and sanity
      # checks on this data in case a user "hacks" the input
      # Add constraints to the field
      constraints:
        # Make sure it's a number
        - Integer
 
    # The submit button
    - type: Submit
      name: submit
      value: Submit
      attributes:
        class: btn btn-primary
 
# Global filters and constraints.
constraints:
    # The user cannot leave any fields blank
    - Required
    # If not all fields are required, move the Required constraint to the
    # fields that are
filter:
    # Remove whitespace at both ends
    - TrimEdges
    # Escape HTML characters for safety
    - HTMLEscape